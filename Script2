#!/bin/bash

# Step 1: Find all directories recursively and filter directories containing only files
directories=$(find /path/to/your/directory -type d -exec sh -c '
  for dir; do
    if [ "$(find "$dir" -mindepth 1 -type d -print -quit)" = "" ]; then
      echo "$dir"
    fi
  done
' sh {} +)

# Step 2: Extract creation timestamps and sort directories by timestamp in descending order
sorted_directories=$(for dir in $directories; do
  echo "$(stat -c %Y "$dir") $dir"
done | sort -nr)

# Step 3: Exclude the last two directories based on their timestamps
excluded_directories=$(echo "$sorted_directories" | awk 'NR>2')

# Step 4: List the remaining directories
echo "$excluded_directories" | cut -d' ' -f2


########

#!/bin/bash

# Find all directories in the specified directory and sort them by creation time in descending order
directories=$(find /path/to/your/directory -maxdepth 1 -type d -printf "%T@ %p\n" | sort -nr)

# Exclude the last two directories
excluded_directories=$(echo "$directories" | head -n -2 | awk '{print $2}')

# Print the remaining directories
echo "$excluded_directories"
#############

#!/bin/bash

# Find all files in the specified directory except those located within the latest two directories
find /path/to/your/directory -type f ! -newer $(ls -lt /path/to/your/directory | grep '^d' | awk 'NR==3 {print $NF}') -print
########


#!/bin/bash

# List directories sorted by creation time in descending order, skip the first two directories, and extract directory names
remaining_directories=$(ls -lt /path/to/your/directory | grep '^d' | tail -n +3 | awk '{print $NF}')

# Print the remaining directories
echo "$remaining_directories"

########
#!/bin/bash

# Find all directories within the specified directory
directories=$(find /path/to/your/directory -mindepth 1 -maxdepth 1 -type d)

# Loop through each directory and perform actions
for dir in $directories; do
    # Perform actions on the directory
    echo "Processing directory: $dir"
    # Add your actions here, such as copying files, deleting directories, etc.
done
##########

#!/bin/bash

# Find all directories within the specified directory up to two levels deep
directories=$(find /path/to/your/directory -mindepth 1 -maxdepth 2 -type d -exec printf "%s\n" {} + | sed 's/ /\\ /g')

# Loop through each directory and perform actions
for dir in $directories; do
    # Perform actions on the directory
    echo "Processing directory: $dir"
    # Add your actions here, such as copying files, deleting directories, etc.
done
#####
#!/bin/bash

# Find all directories within the specified directory up to two levels deep
directories=$(find /path/to/your/directory -mindepth 1 -maxdepth 2 -type d -print0 | tr '\0' '\n')

# Loop through each directory and perform actions
while IFS= read -r -d '' dir; do
    # Perform actions on the directory
    echo "Processing directory: $dir"
    # Add your actions here, such as copying files, deleting directories, etc.
done <<< "$directories"

#########

#!/bin/bash

# Define the directory path
directory="/path/to/your/directory"

# Find all directories in the specified directory and sort them by modification time in descending order
directories=$(find "$directory" -maxdepth 1 -type d -exec stat --format='%Y %n' {} + | sort -nr)

# Get the timestamps of the latest two directories
latest_directories=$(echo "$directories" | head -n 2 | awk '{print $1}')

# Exclude the latest two days
excluded_directories=$(echo "$directories" | awk -v latest="$latest_directories" '$1 < latest' | cut -d' ' -f2-)

# Print the remaining directories
echo "$excluded_directories"
##########

#!/bin/bash

# Function to escape directory names with spaces
escape_spaces() {
  echo "$1" | sed 's/ /\\ /g'
}

# Find all directories in the specified directory and store their creation time and path
directories=$(find /path/to/your/directory -maxdepth 1 -type d -exec stat -c "%Y %n" {} +)

# Sort directories by creation time in descending order
sorted_directories=$(echo "$directories" | sort -rn)

# Extract the two latest created directories
latest_directories=$(echo "$sorted_directories" | head -n 2 | awk '{print $2}')

# Remove spaces from directory names if present
escaped_latest_directories=$(escape_spaces "$latest_directories")

# List all directories except the two latest ones
find /path/to/your/directory -maxdepth 1 -type d ! -name $escaped_latest_directories -printf "%P\n"


#####

#!/bin/bash

# Function to escape directory names with spaces
escape_spaces() {
  echo "$1" | sed 's/ /\\ /g'
}

# Find all directories in the specified directory and store their creation time and path
directories=$(find /path/to/your/directory -maxdepth 1 -type d -printf "%T@ %p\n")

# Sort directories by creation time in descending order
sorted_directories=$(echo "$directories" | sort -rn)

# Extract the names of the two latest created directories
latest_directories=$(echo "$sorted_directories" | head -n 2 | awk '{print $2}')

# Remove spaces from directory names if present
escaped_latest_directories=$(escape_spaces "$latest_directories")

# List all directories except the two latest ones
find /path/to/your/directory -maxdepth 1 -type d ! -name $(escape_spaces "$(echo "$latest_directories" | sed 's/\n/ -and ! -name /g')") -printf "%P\n"


########
#!/bin/bash

# Function to escape directory names with spaces
escape_spaces() {
  echo "$1" | sed 's/ /\\ /g'
}

# Find all directories in the specified directory and store their creation time and path
IFS=$'\n' # Set IFS to newline to handle spaces in directory names
directories=$(find '/path/to/your/directory' -maxdepth 1 -type d -printf "%T@ %p\n")

# Sort directories by creation time in descending order
sorted_directories=$(echo "$directories" | sort -rn)

# Extract the names of the two latest created directories
latest_directories=$(echo "$sorted_directories" | head -n 2 | awk '{print $2}')

# Remove spaces from directory names if present
escaped_latest_directories=$(escape_spaces "$latest_directories")

# List all directories except the two latest ones
find '/path/to/your/directory' -maxdepth 1 -type d ! -name $(escape_spaces "$(echo "$latest_directories" | sed 's/\n/ -and ! -name /g')") -printf "%P\n"

########

#!/bin/bash

# Specify the directory path
directory="/path/to/your/directory"

# List all directories in the specified directory, sort them by modification time in reverse order,
# skip the latest two directories, and print the directory names
ls -td "$directory"/*/ | tail -n +3 | awk '{print substr($0, index($0,$3))}' | xargs -d '\n' echo

